/****************************************************************************/
/*FILENAME : o:\lauris\service\sqlscript\patiliste_aktualisieren.isq        */
/*AUTOR    : lis                                                            */
/*ERSTELLT : [060130.2030]                                                  */
/*KURZINFO : SWL-II: Pflege der Lauris-Patientenliste im TAIN               */
/*MODULE   : Lauris, Pflege der PATILISTE im TAIN                           */
/*BEW_ANZ  :                                                                */
/*BEW_GEF  :                                                                */
/*TIMESTAMP: <20060130.2030>                                                */
/****************************************************************************/
/*AENDERUNG:                                                                */
/*[060128] 1.00 lis erstellt                                                */
/****************************************************************************/

/* Parameter deklarieren         */

declare
  @startdat                       smalldatetime,
  @enddat                         smalldatetime,
  @datum                          varchar(21),
  @sqi                            varchar(16),
  @sqi1                           varchar(16),
  @sqix                           int,
  @sqix1                          int,
  @TageAbEntl                     int,
  @TageManuell                    int,
  @TageInaktiv                    int,
  @PatilisteFaelleGesamt          int,
  @PatilisteFaelleOhneAktivBis    int,
  @PatilisteFaelleInaktiv         int,
  @PatilisteFaelleAktiv           int,
  @PatilisteFaelleZukunft         int,
  @TageAmbAufn                    int,
  @TageAmbErfasst                 int,
  @EINSVEKTORCODE                 char(16),
  @EINSVEKTORX                    int,
  @EINSVEKTORMDKHP                char(16),
  @EINSVEKTORMDKHPX               int,
  @EINSVEKTORLAURISEINSSTAT       char(16),
  @EINSVEKTORLAURISEINSSTATX      int,
  @EINSVEKTORLAURISEINSAM         char(16),
  @EINSVEKTORLAURISEINSAMX        int,
  @EINSVEKTORLAURISEINSEH         char(16),
  @EINSVEKTORLAURISEINSEHX        int,
  @EINSTYPMAX                     int,
  @MITEINZEL                      tinyint,
  @AKTIV                          tinyint,
  @AUTOENTLASS                    tinyint,
  
  @REPORT                         tinyint, 
  @DEBUG                          tinyint, 
  @UPDATE                         tinyint


set nocount on

/**********************************************************************************************************/
select @TageAbEntl     =  3               /* !!!!!! soviel Tage nach EntlVerw aufheben            !!!!!!! */
select @TageManuell    =  3               /* !!!!!! soviel Tage nach manueller Aufnahme aufheben  !!!!!!! */
select @TageInaktiv    = 28               /* !!!!!! soviel Tage kann der Fall inaktiv bleiben     !!!!!!! */
select @TageAmbAufn    =  7               /* !!!!!! ambulante Fälle 7 Tage nach AUFNAHMEDAT weg   !!!!!!! */
select @TageAmbErfasst =  26              /* !!!!!! ambulante Fälle 7 Tage nach ERFASSDAT weg     !!!!!!! */
select @sqi            = 'SQImport'       /* !!!!!! hier den PATI-SQImport-Login eintragen        !!!!!!! */
select @sqi1           = 'SQImportPati'   /* !!!!!! hier den PATI-SQImport-Login eintragen        !!!!!!! */
select @EINSVEKTORCODE = 'PL_MANUELL'     /* !!!!!! diese Einsendergruppe nicht bearbeiten        !!!!!!! */
select @AUTOENTLASS    =  0               /* !!!!!! 1 = Systemparameter AUTOENTLASS berücksichtigen!!!!!! */
select @REPORT         =  1               /* !!!!!! 1 = Änderungen an PATILISTE berichten         !!!!!!! */
select @UPDATE         =  1               /* !!!!!! 0 = keine Änderungen an PATILISTE durchführen !!!!!!! */
select @DEBUG          =  0              /* !!!!!! 1 = Debugmeldungen einschalten                !!!!!!! */
/**********************************************************************************************************/

select @EINSVEKTORMDKHP            = 'MDKHP'            /* Pflegeheim Mariendorf */
select @EINSVEKTORLAURISEINSSTAT   = 'LAURISEINSSTAT'   /* Stationen             */
select @EINSVEKTORLAURISEINSAM     = 'LAURISEINSAM'     /* MVZ                   */
select @EINSVEKTORLAURISEINSEH     = 'LAURISEINSEH'     /* Erste Hilfen          */



/* Auflösung der Einsendergruppen PL_MANUELL        */
select @EINSVEKTORX = EINSENDERX from EINSENDER where EINSCODE = @EINSVEKTORCODE and AKTIVBIS is null
if @EINSVEKTORX  is null select @EINSVEKTORX = 0

select @EINSTYPMAX = 2147483647   -- 2 hoch 31 -1
-- select @EINSTYPMAX = 1            -- nur Typ 1 liefern
select @MITEINZEL  = 0            -- 1: auch Einzeleinsender liefern

select EINSVEKTORX,     /* Einsender des Vektors   */
       V.EINSENDERX,    /* Einsenderx der Vektorzeile  */
       SORT,            /* Nummer der Vektorzeile  */
       EINSCODE,EINSKURZ, EINSTYP
into  #temp_pl_manuell      
from EINSVEKTOR V, EINSENDER E
where EINSVEKTORX  = @EINSVEKTORX
   and V.EINSENDERX  = E.EINSENDERX
   and isnull(EINSTYP,1)<=@EINSTYPMAX
   and (V.SORT>0 or @MITEINZEL=1)
   and (E.AKTIVBIS is null or @AKTIV<>1)
order by SORT
if @DEBUG = 1 
begin
  print ' Einsvektor pl_manuell'
  select * from #temp_pl_manuell
end

/* Auflösung der Einsendergruppen EINSVEKTORMDKHP        */
select @EINSVEKTORMDKHPX = EINSENDERX from EINSENDER where EINSCODE = @EINSVEKTORMDKHP and AKTIVBIS is null
if @EINSVEKTORMDKHPX  is null select @EINSVEKTORMDKHPX = 0

select @EINSTYPMAX = 2147483647   -- 2 hoch 31 -1
-- select @EINSTYPMAX = 1            -- nur Typ 1 liefern
select @MITEINZEL  = 0            -- 1: auch Einzeleinsender liefern

select EINSVEKTORX,     /* Einsender des Vektors   */
       V.EINSENDERX,    /* Einsenderx der Vektorzeile  */
       SORT,            /* Nummer der Vektorzeile  */
       EINSCODE,EINSKURZ, EINSTYP
into  #t_MDKHP      
from EINSVEKTOR V, EINSENDER E
where EINSVEKTORX  = @EINSVEKTORMDKHPX
   and V.EINSENDERX  = E.EINSENDERX
   and isnull(EINSTYP,1)<=@EINSTYPMAX
   and (V.SORT>0 or @MITEINZEL=1)
   and (E.AKTIVBIS is null or @AKTIV<>1)
order by SORT
if @DEBUG = 1 
begin
  print ' Einsvektor MDKHP'
  select * from #t_MDKHP
end

/* Auflösung der Einsendergruppen EINSVEKTORLAURISEINSSTAT        */
select @EINSVEKTORLAURISEINSSTATX = EINSENDERX from EINSENDER where EINSCODE = @EINSVEKTORLAURISEINSSTAT and AKTIVBIS is null
if @EINSVEKTORLAURISEINSSTATX  is null select @EINSVEKTORLAURISEINSSTATX = 0

select @EINSTYPMAX = 2147483647   -- 2 hoch 31 -1
-- select @EINSTYPMAX = 1            -- nur Typ 1 liefern
select @MITEINZEL  = 0            -- 1: auch Einzeleinsender liefern

select EINSVEKTORX,     /* Einsender des Vektors   */
       V.EINSENDERX,    /* Einsenderx der Vektorzeile  */
       SORT,            /* Nummer der Vektorzeile  */
       EINSCODE,EINSKURZ, EINSTYP
into  #t_EINSSTAT      
from EINSVEKTOR V, EINSENDER E
where EINSVEKTORX  = @EINSVEKTORLAURISEINSSTATX
   and V.EINSENDERX  = E.EINSENDERX
   and isnull(EINSTYP,1)<=@EINSTYPMAX
   and (V.SORT>0 or @MITEINZEL=1)
   and (E.AKTIVBIS is null or @AKTIV<>1)
order by SORT


if @DEBUG = 1 
begin
  print ' Einsvektor LAURISEINSSTAT'
  select * from #t_EINSSTAT
end

/* Auflösung der Einsendergruppen EINSVEKTORLAURISEINSAM        */
select @EINSVEKTORLAURISEINSAMX = EINSENDERX from EINSENDER where EINSCODE = @EINSVEKTORLAURISEINSAM and AKTIVBIS is null
if @EINSVEKTORLAURISEINSAMX  is null select @EINSVEKTORLAURISEINSAMX = 0

select @EINSTYPMAX = 2147483647   -- 2 hoch 31 -1
-- select @EINSTYPMAX = 1            -- nur Typ 1 liefern
select @MITEINZEL  = 0            -- 1: auch Einzeleinsender liefern

select EINSVEKTORX,     /* Einsender des Vektors   */
       V.EINSENDERX,    /* Einsenderx der Vektorzeile  */
       SORT,            /* Nummer der Vektorzeile  */
       EINSCODE,EINSKURZ, EINSTYP
into  #t_EINSAM      
from EINSVEKTOR V, EINSENDER E
where EINSVEKTORX  = @EINSVEKTORLAURISEINSAMX
   and V.EINSENDERX  = E.EINSENDERX
   and isnull(EINSTYP,1)<=@EINSTYPMAX
   and (V.SORT>0 or @MITEINZEL=1)
   and (E.AKTIVBIS is null or @AKTIV<>1)
order by SORT


if @DEBUG = 1 
begin
  print ' Einsvektor LAURISEINSAM'
  select * from #t_EINSAM
end

/* Auflösung der Einsendergruppen EINSVEKTORLAURISEINSEH        */
select @EINSVEKTORLAURISEINSEHX = EINSENDERX from EINSENDER where EINSCODE = @EINSVEKTORLAURISEINSEH and AKTIVBIS is null
if @EINSVEKTORLAURISEINSEHX  is null select @EINSVEKTORLAURISEINSEHX = 0

select @EINSTYPMAX = 2147483647   -- 2 hoch 31 -1
-- select @EINSTYPMAX = 1            -- nur Typ 1 liefern
select @MITEINZEL  = 0            -- 1: auch Einzeleinsender liefern

select EINSVEKTORX,     /* Einsender des Vektors   */
       V.EINSENDERX,    /* Einsenderx der Vektorzeile  */
       SORT,            /* Nummer der Vektorzeile  */
       EINSCODE,EINSKURZ, EINSTYP
into  #t_EINSEH      
from EINSVEKTOR V, EINSENDER E
where EINSVEKTORX  = @EINSVEKTORLAURISEINSEHX
   and V.EINSENDERX  = E.EINSENDERX
   and isnull(EINSTYP,1)<=@EINSTYPMAX
   and (V.SORT>0 or @MITEINZEL=1)
   and (E.AKTIVBIS is null or @AKTIV<>1)
order by SORT


if @DEBUG = 1 
begin
  print ' Einsvektor LAURISEINSEH'
  select * from #t_EINSEH
end

select @sqix  = 0
select @sqix1 = 0
select @sqix =PERSONX from PERSON where PERSONID=@sqi and STORNODAT is null
select @sqix1=PERSONX from PERSON where PERSONID=@sqi1 and STORNODAT is null
/* select PERSONX, PERSONID from PERSON where PERSONID=@sqi and STORNODAT is null        */

set dateformat dmy
select @startdat=getdate()
select @datum='Start: ' + convert(char(9),@startdat,4)+convert(char(5),@startdat,8)
if @REPORT = 1 
begin
  print @datum
  print '+--------------------------------------------------------------+'
  print '|Lauris, PATILISTE aktualisieren                               |'
  print '+--------------------------------------------------------------+'
  print ''
  print ''
  print ''
  select @PatilisteFaelleGesamt=count(*) from PATILISTE
  select @PatilisteFaelleOhneAktivBis=count(*) from PATILISTE where AKTIVBIS is NULL
  select @PatilisteFaelleInaktiv=count (*) from PATILISTE where AKTIVBIS is not NULL and AKTIVBIS <= getdate()
  select @PatilisteFaelleAktiv=count (*) from PATILISTE where AKTIVBIS is not NULL and AKTIVBIS > getdate()
  -- select @PatilisteFaelleZukunft=count (*) from PATILISTE where AUFNAHMEDAT is not NULL and AUFNAHMEDAT > getdate()
  select '' as 'Anzahl Fälle vorher:',
         @PatilisteFaelleGesamt as 'Gesamt  ',
         @PatilisteFaelleOhneAktivBis as 'ohne AKTIVBIS  ',
         @PatilisteFaelleInaktiv as 'AKTIVBIS abgelaufen  ',
         @PatilisteFaelleAktiv as 'AKTIVBIS zukünftig  '
  --       @PatilisteFaelleZukunft as 'AUFNAHMEDAT zukünftig  '
end
set nocount off
if @REPORT = 1 
begin
  print ''
  print ''
  print ''
  print '=========================================================================='
  print 'PATILISTE: falscher Einsender, die Verwaltung ist Master, nur SQImport    '
  print '=========================================================================='
  
  select 
    PatiFall=substring(F.PATIFALLNR,1,10),
    PatArt=substring(F.PATIART,1,2) +' / '+ substring(P.PATIART,1,2),
    ErfassdatPatiliste=convert(char(11),P.ERFASSDAT,104)+convert(char(8),P.ERFASSDAT,108)+' ',
    AktivbisPatiliste=convert(char(11),P.AKTIVBIS,104)+convert(char(8),P.AKTIVBIS,108)+' ',
    EntlassungdatVerw=convert(char(11),F.ENTLDATVERW,104)+convert(char(8),F.ENTLDATVERW,108)+' ',
    Einsender_PATILISTE=E1.EINSCODE, 
    Einsender_PATIFALL=E2.EINSCODE, 
    PE.PERSONID, P.ERFASSPERS
  from PATILISTE P, PATIFALL F, EINSENDER E1, EINSENDER E2, PERSON PE
  where 
        F.PATIFALLX=P.PATIFALLX
    and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
    and (F.EINSENDERX <> P.EINSENDERX or F.EINSENDERX is null)
    and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
--    and (P.AKTIVBIS is null or P.AKTIVBIS > dateadd(minute,-1,getdate()))
    and (P.ERFASSPERS=@sqix or P.ERFASSPERS=@sqix1)
    and P.EINSENDERX*=E1.EINSENDERX
    and F.EINSENDERX*=E2.EINSENDERX
    and PE.PERSONX=P.ERFASSPERS
    order by F.PATIFALLNR
end

if @UPDATE = 1 
begin
 update PATILISTE set AKTIVBIS=dateadd(hour,-1,getdate())
   from PATILISTE P, PATIFALL F
   where 
       F.PATIFALLX=P.PATIFALLX
   and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
   and (F.EINSENDERX <> P.EINSENDERX or F.EINSENDERX is null)
   and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
--   and  (P.AKTIVBIS is null or P.AKTIVBIS > dateadd(minute,-1,getdate()))
   and (P.ERFASSPERS=@sqix or P.ERFASSPERS=@sqix1)
end   


if @REPORT = 1 
begin
  print ''
  print ''
  print ''
  print '=========================================================================='
  print 'PATILISTE: falscher Einsender, die Verwaltung ist Master, nur manuell     '
  print '           3 Tage nach manueller Erfassung von der Liste nehmen           '
  print '=========================================================================='
  
  select 
    PatiFall=substring(F.PATIFALLNR,1,10),
    PatArt=substring(F.PATIART,1,2) +' / '+ substring(P.PATIART,1,2),
    ErfassdatPatiliste=convert(char(11),P.ERFASSDAT,104)+convert(char(8),P.ERFASSDAT,108)+' ',
    AktivbisPatiliste=convert(char(11),P.AKTIVBIS,104)+convert(char(8),P.AKTIVBIS,108)+' ',
    EntlassungdatVerw=convert(char(11),F.ENTLDATVERW,104)+convert(char(8),F.ENTLDATVERW,108)+' ',
    Einsender_PATILISTE=E1.EINSCODE, 
    Einsender_PATIFALL=E2.EINSCODE, 
    PE.PERSONID, P.ERFASSPERS
  from PATILISTE P, PATIFALL F, EINSENDER E1, EINSENDER E2, PERSON PE
  where 
        F.PATIFALLX=P.PATIFALLX
    and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
    and (F.EINSENDERX <> P.EINSENDERX or F.EINSENDERX is null)
    and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
    and (dateadd(day,@TageManuell,P.ERFASSDAT) < getdate())
--    and (P.AKTIVBIS is null or P.AKTIVBIS > dateadd(minute,-1,getdate()))
    and (P.ERFASSPERS<>@sqix and P.ERFASSPERS<>@sqix1)
    and P.EINSENDERX*=E1.EINSENDERX
    and F.EINSENDERX*=E2.EINSENDERX
    and PE.PERSONX=P.ERFASSPERS
    order by F.PATIFALLNR
end

if @UPDATE = 1 
begin
 update PATILISTE set AKTIVBIS=dateadd(hour,-1,getdate())
   from PATILISTE P, PATIFALL F
   where 
        F.PATIFALLX=P.PATIFALLX
   and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
   and (F.EINSENDERX <> P.EINSENDERX or F.EINSENDERX is null)
   and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
   and (dateadd(day,@TageManuell,P.ERFASSDAT) < getdate())
--   and (P.AKTIVBIS is null or P.AKTIVBIS > dateadd(minute,-1,getdate()))
   and (P.ERFASSPERS<>@sqix and P.ERFASSPERS<>@sqix1)
end   

/* -----------------------------------------------------------------------------------------------------------------------------------*/

if @AUTOENTLASS = 1 
begin
  if @REPORT = 1 
  begin
    print ''
    print ''
    print ''
    print '============================================================'
    print 'PATILISTE: Bearbeiten der AUTOENTLASS Einträge              '
    print '============================================================'
    select
      PatiFall=substring(F.PATIFALLNR,1,10),
      PatArt=substring(F.PATIART,1,2) +' / '+ substring(P.PATIART,1,2),
      Einsender=E.EINSCODE,
      ErfassdatPatiliste=convert(char(11),P.ERFASSDAT,104)+convert(char(8),P.ERFASSDAT,108)+' ',
      Aufnahmedat=convert(char(11),F.AUFNDAT,104)+convert(char(8),F.AUFNDAT,108)+' ',
      EntlassungdatVerw=convert(char(11),F.ENTLDATVERW,104)+convert(char(8),F.ENTLDATVERW,108)+' ',
      Aktivbis_neu = case when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is not null and F.AUFTRAGLETZT > F.ENTLDATVERW) then convert(char(11),dateadd(day,S.INTVALUE,F.AUFTRAGLETZT),104)+convert(char(8),dateadd(day,S.INTVALUE,F.AUFTRAGLETZT),108)+' '
                          when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is not null and F.ENTLDATVERW >= F.AUFTRAGLETZT) then convert(char(11),dateadd(day,S.INTVALUE,F.ENTLDATVERW),104)+convert(char(8),dateadd(day,S.INTVALUE,F.ENTLDATVERW),108)+' '
                          when (F.ENTLDATVERW is null and F.AUFTRAGLETZT is not null) then convert(char(11),dateadd(day,S.INTVALUE,F.AUFTRAGLETZT),104)+convert(char(8),dateadd(day,S.INTVALUE,F.AUFTRAGLETZT),108)+' '
                          when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is null) then convert(char(11),dateadd(day,S.INTVALUE,F.ENTLDATVERW),104)+convert(char(8),dateadd(day,S.INTVALUE,F.ENTLDATVERW),108)+' '
                          when (F.ENTLDATVERW is null and F.AUFTRAGLETZT is null) then convert(char(11),dateadd(day,S.INTVALUE,P.ERFASSDAT),104)+convert(char(8),dateadd(day,S.INTVALUE,P.ERFASSDAT),108)+' '
                     end,
      Aktivbis_alt="("+convert(char(11),P.AKTIVBIS,104)+convert(char(8),P.AKTIVBIS,108)+' '+")",
      ErfassPers=PE.PERSONID,
      letzter_Auftrag=convert(char(11),F.AUFTRAGLETZT,104)+convert(char(8),F.AUFTRAGLETZT,108)+' ',
      Autoentlasstage=S.INTVALUE
    from PATILISTE P, EINSENDER E, PATIFALL F, SYSTEMPARAM S, PERSON PE
    where F.PATIFALLX=P.PATIFALLX
      and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
      and (P.AKTIVBIS is NULL or P.AKTIVBIS > dateadd(day,S.INTVALUE,F.ENTLDATVERW))
      and E.EINSENDERX=P.EINSENDERX
      and S.EINSENDERX=P.EINSENDERX
      and S.MODULID='PATIENT'
      and S.PARAMID='AUTOENTLASS'
      and S.INTVALUE > 0
      and S.STORNODAT is null
    --  and (P.ERFASSPERS=@sqix or P.ERFASSPERS=@sqix1)
      and PE.PERSONX=P.ERFASSPERS
    order by P.ERFASSDAT
  end
  
  if @UPDATE = 1 
  begin
   update PATILISTE set AKTIVBIS= case when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is not null and F.AUFTRAGLETZT > F.ENTLDATVERW) then dateadd(day,S.INTVALUE,F.AUFTRAGLETZT)
                                       when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is not null and F.ENTLDATVERW >= F.AUFTRAGLETZT) then dateadd(day,S.INTVALUE,F.ENTLDATVERW)
                                       when (F.ENTLDATVERW is null and F.AUFTRAGLETZT is not null) then dateadd(day,S.INTVALUE,F.AUFTRAGLETZT)
                                       when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is null) then dateadd(day,S.INTVALUE,F.ENTLDATVERW)
                                       when (F.ENTLDATVERW is null and F.AUFTRAGLETZT is null) then dateadd(day,S.INTVALUE,P.ERFASSDAT)
                                  end
   from PATILISTE P, PATIFALL F, SYSTEMPARAM S
   where F.PATIFALLX=P.PATIFALLX
     and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
     and (P.AKTIVBIS is NULL or P.AKTIVBIS > dateadd(day,S.INTVALUE,F.ENTLDATVERW))
     and S.EINSENDERX=P.EINSENDERX
     and S.MODULID='PATIENT'
     and S.PARAMID='AUTOENTLASS'
     and S.INTVALUE > 0
     and S.STORNODAT is null
  --   and (P.ERFASSPERS=@sqix or P.ERFASSPERS=@sqix1)
  end
end

/* -----------------------------------------------------------------------------------------------------------------------------------*/

if @REPORT = 1 
begin
  print ''
  print ''
  print ''
  print '========================================================================'
  print 'PATILISTE: seit 3 Tagen entlassene stationaere Patienten loeschen       '
  print '           fuer Einsvektor MDKHP            (Pflegeheim Mariendorf)     '
  print '           fuer Einsvektor LAURISEINSSTAT   (Stationen)                 '
  print '           fuer Einsvektor LAURISEINSEH     (Erste Hilfen)              '
  print '========================================================================'
  select
    PatiFall=substring(F.PATIFALLNR,1,10),
    PatArt=substring(F.PATIART,1,2) +' / '+ substring(P.PATIART,1,2),
    Einsender=E.EINSCODE,
    ErfassdatPatiliste=convert(char(11),P.ERFASSDAT,104)+convert(char(8),P.ERFASSDAT,108)+' ',
    Aufnahmedat=convert(char(11),F.AUFNDAT,104)+convert(char(8),F.AUFNDAT,108)+' ',
    EntlassungdatVerw=convert(char(11),F.ENTLDATVERW,104)+convert(char(8),F.ENTLDATVERW,108)+' ',
    Aktivbis_neu = case when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is not null and F.AUFTRAGLETZT > F.ENTLDATVERW) then convert(char(11),dateadd(day,3,F.AUFTRAGLETZT),104)+convert(char(8),dateadd(day,3,F.AUFTRAGLETZT),108)+' '
                        when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is not null and F.ENTLDATVERW >= F.AUFTRAGLETZT) then convert(char(11),dateadd(day,3,F.ENTLDATVERW),104)+convert(char(8),dateadd(day,3,F.ENTLDATVERW),108)+' '
                        when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is null) then convert(char(11),dateadd(day,3,F.ENTLDATVERW),104)+convert(char(8),dateadd(day,3,F.ENTLDATVERW),108)+' '
             end,
    Aktivbis_alt="("+convert(char(11),P.AKTIVBIS,104)+convert(char(8),P.AKTIVBIS,108)+' '+")",
    ErfassPers=PE.PERSONID,
    letzter_Auftrag=convert(char(11),F.AUFTRAGLETZT,104)+convert(char(8),F.AUFTRAGLETZT,108)+' '
  from PATILISTE P, EINSENDER E, PATIFALL F, PERSON PE
  where F.PATIFALLX=P.PATIFALLX
    and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
    and F.ENTLDATVERW is not NULL
    and (F.EINSENDERX = P.EINSENDERX or F.EINSENDERX is null)
    and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
    and (   P.EINSENDERX in (select EINSENDERX from #t_MDKHP)
         or P.EINSENDERX in (select EINSENDERX from #t_EINSSTAT)
         or P.EINSENDERX in (select EINSENDERX from #t_EINSEH))

    and (P.AKTIVBIS is NULL or P.AKTIVBIS > dateadd(day,3,F.ENTLDATVERW))
    and PE.PERSONX=P.ERFASSPERS
    and E.EINSENDERX=P.EINSENDERX
end

if @UPDATE = 1 
begin
  update PATILISTE set AKTIVBIS = case when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is not null and F.AUFTRAGLETZT > F.ENTLDATVERW) then dateadd(day,3,F.AUFTRAGLETZT)
                                       when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is not null and F.ENTLDATVERW >= F.AUFTRAGLETZT) then dateadd(day,3,F.ENTLDATVERW)
                                       when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is null) then dateadd(day,3,F.ENTLDATVERW)
             end
    from PATILISTE P, PATIFALL F
    where F.PATIFALLX=P.PATIFALLX
      and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
      and F.ENTLDATVERW is not NULL
      and (F.EINSENDERX = P.EINSENDERX or F.EINSENDERX is null)
      and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
      and (   P.EINSENDERX in (select EINSENDERX from #t_MDKHP)
           or P.EINSENDERX in (select EINSENDERX from #t_EINSSTAT)
           or P.EINSENDERX in (select EINSENDERX from #t_EINSEH))
      and (P.AKTIVBIS is NULL or P.AKTIVBIS > dateadd(day,3,F.ENTLDATVERW))
end



if @REPORT = 1 
begin
  print ''
  print ''
  print ''
  print '========================================================================'
  print 'PATILISTE: seit 3 Tagen entlassene stationaere Patienten loeschen       '
  print '           oder 21 Tage nach letztem Auftrag                            '
  print '           fuer Einsvektor LAURISEINSAM   (MVZ)                         '
  print '========================================================================'
  select
    PatiFall=substring(F.PATIFALLNR,1,10),
    PatArt=substring(F.PATIART,1,2) +' / '+ substring(P.PATIART,1,2),
    Einsender=E.EINSCODE,
    ErfassdatPatiliste=convert(char(11),P.ERFASSDAT,104)+convert(char(8),P.ERFASSDAT,108)+' ',
    Aufnahmedat=convert(char(11),F.AUFNDAT,104)+convert(char(8),F.AUFNDAT,108)+' ',
    EntlassungdatVerw=convert(char(11),F.ENTLDATVERW,104)+convert(char(8),F.ENTLDATVERW,108)+' ',
    Aktivbis_neu = case when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is not null and F.AUFTRAGLETZT > F.ENTLDATVERW) then convert(char(11),dateadd(day,21,F.AUFTRAGLETZT),104)+convert(char(8),dateadd(day,3,F.AUFTRAGLETZT),108)+' '
                        when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is not null and F.ENTLDATVERW >= dateadd(day,21,F.AUFTRAGLETZT)) then convert(char(11),dateadd(day,3,F.ENTLDATVERW),104)+convert(char(8),dateadd(day,3,F.ENTLDATVERW),108)+' '
                        when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is null) then convert(char(11),dateadd(day,3,F.ENTLDATVERW),104)+convert(char(8),dateadd(day,3,F.ENTLDATVERW),108)+' '
             end,
    Aktivbis_alt="("+convert(char(11),P.AKTIVBIS,104)+convert(char(8),P.AKTIVBIS,108)+' '+")",
    ErfassPers=PE.PERSONID,
    letzter_Auftrag=convert(char(11),F.AUFTRAGLETZT,104)+convert(char(8),F.AUFTRAGLETZT,108)+' '
  from PATILISTE P, EINSENDER E, PATIFALL F, PERSON PE
  where F.PATIFALLX=P.PATIFALLX
    and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
    and F.ENTLDATVERW is not NULL
    and (F.EINSENDERX = P.EINSENDERX or F.EINSENDERX is null)
    and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
    and P.EINSENDERX in (select EINSENDERX from #t_EINSAM)
    and (P.AKTIVBIS is NULL or P.AKTIVBIS > dateadd(day,3,F.ENTLDATVERW))
    and PE.PERSONX=P.ERFASSPERS
    and E.EINSENDERX=P.EINSENDERX
end

if @UPDATE = 1 
begin
  update PATILISTE set AKTIVBIS = case when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is not null and F.AUFTRAGLETZT > F.ENTLDATVERW) then dateadd(day,21,F.AUFTRAGLETZT)
                                       when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is not null and F.ENTLDATVERW >= dateadd(day,21,F.AUFTRAGLETZT)) then dateadd(day,3,F.ENTLDATVERW)
                                       when (F.ENTLDATVERW is not null and F.AUFTRAGLETZT is null) then dateadd(day,3,F.ENTLDATVERW)
             end
    from PATILISTE P, PATIFALL F
    where F.PATIFALLX=P.PATIFALLX
      and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
      and F.ENTLDATVERW is not NULL
      and (F.EINSENDERX = P.EINSENDERX or F.EINSENDERX is null)
      and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
      and P.EINSENDERX in (select EINSENDERX from #t_EINSAM)
      and (P.AKTIVBIS is NULL or P.AKTIVBIS > dateadd(day,3,F.ENTLDATVERW))
end


if @REPORT = 1 
begin
  print ''
  print ''
  print ''
  print '====================================================================='
  print 'PATILISTE: inaktive Fälle nach 150 Tagen löschen                     '
  print '           fuer Einsvektor MDKHP            (Pflegeheim Mariendorf)  '
  print '====================================================================='
  select
    PatiFall=substring(F.PATIFALLNR,1,10),
    PatArt=substring(F.PATIART,1,2) +' / '+ substring(P.PATIART,1,2),
    Einsender=E.EINSCODE,
    ErfassdatPatiliste=convert(char(11),P.ERFASSDAT,104)+convert(char(8),P.ERFASSDAT,108)+' ',
    Aufnahmedat=convert(char(11),F.AUFNDAT,104)+convert(char(8),F.AUFNDAT,108)+' ',
    EntlassungdatVerw=convert(char(11),F.ENTLDATVERW,104)+convert(char(8),F.ENTLDATVERW,108)+' ',
    Aktivbis_neu = case when (F.AUFNDAT is not null) then convert(char(11),dateadd(day,150,F.AUFNDAT),104)+convert(char(8),dateadd(day,150,F.AUFNDAT),108)+' '
                        when (F.AUFNDAT is null) then convert(char(11),dateadd(day,150,P.ERFASSDAT),104)+convert(char(8),dateadd(day,150,P.ERFASSDAT),108)+' '
             end,
    Aktivbis_alt="("+convert(char(11),P.AKTIVBIS,104)+convert(char(8),P.AKTIVBIS,108)+' '+")",
    ErfassPers=PE.PERSONID,
    letzter_Auftrag=convert(char(11),F.AUFTRAGLETZT,104)+convert(char(8),F.AUFTRAGLETZT,108)+' '
  
  from PATILISTE P, PATIFALL F, PERSON PE, EINSENDER E
  where
        F.PATIFALLX=P.PATIFALLX
    and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
    and F.ENTLDATVERW is NULL
    and (F.AUFTRAGLETZT is NULL or (F.AUFTRAGLETZT is not NULL and dateadd(day,150,F.AUFTRAGLETZT) <  getdate()))
    and P.AKTIVBIS is null
    and (dateadd(day,150,P.ERFASSDAT) < getdate())
    and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
    and P.EINSENDERX in (select EINSENDERX from #t_MDKHP)
    and E.EINSENDERX=P.EINSENDERX 
    and PE.PERSONX=P.ERFASSPERS
end

if @UPDATE = 1 
begin
 update PATILISTE set AKTIVBIS = case when (F.AUFNDAT is not null) then dateadd(day,150,F.AUFNDAT)
                                      when (F.AUFNDAT is null) then dateadd(day,150,P.ERFASSDAT)
            end
 from PATILISTE P, PATIFALL F
 where F.PATIFALLX=P.PATIFALLX
   and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
   and F.ENTLDATVERW is NULL
   and (F.AUFTRAGLETZT is NULL or (F.AUFTRAGLETZT is not NULL and dateadd(day,150,F.AUFTRAGLETZT) <  getdate()))
   and P.AKTIVBIS is null
   and (dateadd(day,150,P.ERFASSDAT) < getdate())
   and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
   and P.EINSENDERX in (select EINSENDERX from #t_MDKHP)
end


if @REPORT = 1 
begin
  print ''
  print ''
  print ''
  print '====================================================================='
  print 'PATILISTE: inaktive Fälle nach 7 Tagen löschen                       '
  print '           oder 14 Tage nach letztem Auftrag                         '
  print '           fuer Einsvektor LAURISEINSSTAT   (Stationen)              '
  print '====================================================================='
  select
    PatiFall=substring(F.PATIFALLNR,1,10),
    PatArt=substring(F.PATIART,1,2) +' / '+ substring(P.PATIART,1,2),
    Einsender=E.EINSCODE,
    ErfassdatPatiliste=convert(char(11),P.ERFASSDAT,104)+convert(char(8),P.ERFASSDAT,108)+' ',
    Aufnahmedat=convert(char(11),F.AUFNDAT,104)+convert(char(8),F.AUFNDAT,108)+' ',
    EntlassungdatVerw=convert(char(11),F.ENTLDATVERW,104)+convert(char(8),F.ENTLDATVERW,108)+' ',
    Aktivbis_neu = case when (F.AUFTRAGLETZT is not null and (F.AUFTRAGLETZT > P.ERFASSDAT or F.AUFTRAGLETZT > F.AUFNDAT)) then convert(char(11),dateadd(day,14,F.AUFTRAGLETZT),104)+convert(char(8),dateadd(day,14,F.AUFTRAGLETZT),108)+' '
                        when (F.AUFNDAT is not null and P.ERFASSDAT > F.AUFNDAT) then convert(char(11),dateadd(day,7,P.ERFASSDAT),104)+convert(char(8),dateadd(day,7,P.ERFASSDAT),108)+' '
                        when (F.AUFNDAT is null and P.ERFASSDAT > F.AUFTRAGLETZT) then convert(char(11),dateadd(day,7,P.ERFASSDAT),104)+convert(char(8),dateadd(day,7,P.ERFASSDAT),108)+' '
                        when (F.AUFNDAT is not null and F.AUFNDAT > P.ERFASSDAT) then convert(char(11),dateadd(day,7,F.AUFNDAT),104)+convert(char(8),dateadd(day,7,F.AUFNDAT),108)+' '
             end,
    Aktivbis_alt="("+convert(char(11),P.AKTIVBIS,104)+convert(char(8),P.AKTIVBIS,108)+' '+")",
    ErfassPers=PE.PERSONID,
    letzter_Auftrag=convert(char(11),F.AUFTRAGLETZT,104)+convert(char(8),F.AUFTRAGLETZT,108)+' '
  
  from PATILISTE P, PATIFALL F, PERSON PE, EINSENDER E
  where
        F.PATIFALLX=P.PATIFALLX
    and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
    and F.ENTLDATVERW is NULL
    and (F.AUFTRAGLETZT is NULL or (F.AUFTRAGLETZT is not NULL and dateadd(day,14,F.AUFTRAGLETZT) <  getdate()))
    and P.AKTIVBIS is null
    and (dateadd(day,7,P.ERFASSDAT) < getdate())
    and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
    and P.EINSENDERX in (select EINSENDERX from #t_EINSSTAT)
    and E.EINSENDERX=P.EINSENDERX 
    and PE.PERSONX=P.ERFASSPERS
end

if @UPDATE = 1 
begin
 update PATILISTE set AKTIVBIS = case when (F.AUFTRAGLETZT is not null and (F.AUFTRAGLETZT > P.ERFASSDAT or F.AUFTRAGLETZT > F.AUFNDAT)) then dateadd(day,14,F.AUFTRAGLETZT)
                                      when (F.AUFNDAT is not null and P.ERFASSDAT > F.AUFNDAT) then dateadd(day,7,P.ERFASSDAT)
                                      when (F.AUFNDAT is null and P.ERFASSDAT > F.AUFTRAGLETZT) then dateadd(day,7,P.ERFASSDAT)
                                      when (F.AUFNDAT is not null and F.AUFNDAT > P.ERFASSDAT) then dateadd(day,7,F.AUFNDAT)
            end
 from PATILISTE P, PATIFALL F
 where F.PATIFALLX=P.PATIFALLX
   and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
   and F.ENTLDATVERW is NULL
   and (F.AUFTRAGLETZT is NULL or (F.AUFTRAGLETZT is not NULL and dateadd(day,14,F.AUFTRAGLETZT) <  getdate()))
   and P.AKTIVBIS is null
   and (dateadd(day,7,P.ERFASSDAT) < getdate())
   and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
   and P.EINSENDERX in (select EINSENDERX from #t_EINSSTAT) 
end


if @REPORT = 1 
begin
  print ''
  print ''
  print ''
  print '====================================================================='
  print 'PATILISTE: Aufnahme vor 24h und ambulant, dann löschen               '
  print '           inaktive Fälle nach 7 Tagen löschen                       '
  print '           oder 14 Tage nach letztem Auftrag                         '
  print '           fuer Einsvektor LAURISEINSSEH   (Erste Hilfen)            '
  print '====================================================================='
  select
    PatiFall=substring(F.PATIFALLNR,1,10),
    PatArt=substring(F.PATIART,1,2) +' / '+ substring(P.PATIART,1,2),
    Einsender=E.EINSCODE,
    ErfassdatPatiliste=convert(char(11),P.ERFASSDAT,104)+convert(char(8),P.ERFASSDAT,108)+' ',
    Aufnahmedat=convert(char(11),F.AUFNDAT,104)+convert(char(8),F.AUFNDAT,108)+' ',
    EntlassungdatVerw=convert(char(11),F.ENTLDATVERW,104)+convert(char(8),F.ENTLDATVERW,108)+' ',
    Aktivbis_neu = case when (F.AUFNDAT is not null and dateadd(hour,24,F.AUFNDAT) < getdate() and F.PATIART in ('A','a') and dateadd(day,14,F.AUFTRAGLETZT) < getdate()) then convert(char(11),dateadd(hour,24,F.AUFNDAT),104)+convert(char(8),dateadd(hour,24,F.AUFNDAT),108)+' '
                        when (F.AUFTRAGLETZT is not null and (F.AUFTRAGLETZT > P.ERFASSDAT or F.AUFTRAGLETZT > F.AUFNDAT)) then convert(char(11),dateadd(day,14,F.AUFTRAGLETZT),104)+convert(char(8),dateadd(day,14,F.AUFTRAGLETZT),108)+' '
                        when (F.AUFNDAT is not null and P.ERFASSDAT > F.AUFNDAT) then convert(char(11),dateadd(day,7,P.ERFASSDAT),104)+convert(char(8),dateadd(day,7,P.ERFASSDAT),108)+' '
                        when (F.AUFNDAT is null and P.ERFASSDAT > F.AUFTRAGLETZT) then convert(char(11),dateadd(day,7,P.ERFASSDAT),104)+convert(char(8),dateadd(day,7,P.ERFASSDAT),108)+' '
                        when (F.AUFNDAT is not null and F.AUFNDAT > P.ERFASSDAT) then convert(char(11),dateadd(day,7,F.AUFNDAT),104)+convert(char(8),dateadd(day,7,F.AUFNDAT),108)+' '
             end,
    Aktivbis_alt="("+convert(char(11),P.AKTIVBIS,104)+convert(char(8),P.AKTIVBIS,108)+' '+")",
    ErfassPers=PE.PERSONID,
    letzter_Auftrag=convert(char(11),F.AUFTRAGLETZT,104)+convert(char(8),F.AUFTRAGLETZT,108)+' '
  
  from PATILISTE P, PATIFALL F, PERSON PE, EINSENDER E
  where
        F.PATIFALLX=P.PATIFALLX
    and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
    and F.ENTLDATVERW is NULL
    and (F.AUFTRAGLETZT is NULL or (F.AUFTRAGLETZT is not NULL and dateadd(day,14,F.AUFTRAGLETZT) <  getdate()))
    and P.AKTIVBIS is null
    and (dateadd(day,7,P.ERFASSDAT) < getdate())
    and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
    and P.EINSENDERX in (select EINSENDERX from #t_EINSEH)
    and E.EINSENDERX=P.EINSENDERX 
    and PE.PERSONX=P.ERFASSPERS
end

if @UPDATE = 1 
begin
 update PATILISTE set AKTIVBIS = case when (F.AUFNDAT is not null and dateadd(hour,24,F.AUFNDAT) < getdate() and F.PATIART in ('A','a') and dateadd(day,14,F.AUFTRAGLETZT) < getdate()) then dateadd(hour,24,F.AUFNDAT)
                                      when (F.AUFTRAGLETZT is not null and (F.AUFTRAGLETZT > P.ERFASSDAT or F.AUFTRAGLETZT > F.AUFNDAT)) then dateadd(day,14,F.AUFTRAGLETZT)
                                      when (F.AUFNDAT is not null and P.ERFASSDAT > F.AUFNDAT) then dateadd(day,7,P.ERFASSDAT)
                                      when (F.AUFNDAT is null and P.ERFASSDAT > F.AUFTRAGLETZT) then dateadd(day,7,P.ERFASSDAT)
                                      when (F.AUFNDAT is not null and F.AUFNDAT > P.ERFASSDAT) then dateadd(day,7,F.AUFNDAT)
            end
 from PATILISTE P, PATIFALL F
 where F.PATIFALLX=P.PATIFALLX
   and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
   and F.ENTLDATVERW is NULL
   and (F.AUFTRAGLETZT is NULL or (F.AUFTRAGLETZT is not NULL and dateadd(day,14,F.AUFTRAGLETZT) <  getdate()))
   and P.AKTIVBIS is null
   and (dateadd(day,7,P.ERFASSDAT) < getdate())
   and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
   and P.EINSENDERX in (select EINSENDERX from #t_EINSEH) 
end




if @REPORT = 1 
begin
  print ''
  print ''
  print ''
  print '====================================================================='
  print 'PATILISTE: 3 Wochen nach letztem Auftrag löschen                     '
  print '           fuer Einsvektor LAURISEINSAM   (MVZ, Fachambulanzen)      '
  print '====================================================================='
  select
    PatiFall=substring(F.PATIFALLNR,1,10),
    PatArt=substring(F.PATIART,1,2) +' / '+ substring(P.PATIART,1,2),
    Einsender=E.EINSCODE,
    ErfassdatPatiliste=convert(char(11),P.ERFASSDAT,104)+convert(char(8),P.ERFASSDAT,108)+' ',
    Aufnahmedat=convert(char(11),F.AUFNDAT,104)+convert(char(8),F.AUFNDAT,108)+' ',
    EntlassungdatVerw=convert(char(11),F.ENTLDATVERW,104)+convert(char(8),F.ENTLDATVERW,108)+' ',
    Aktivbis_neu = case when (F.AUFNDAT is not null and F.AUFNDAT < getdate() and F.AUFTRAGLETZT < dateadd(day,21,F.AUFNDAT) ) then convert(char(11),dateadd(day,21,F.AUFNDAT),104)+convert(char(8),dateadd(day,21,F.AUFNDAT),108)+' '
                        when (F.AUFTRAGLETZT is not null and (F.AUFTRAGLETZT > dateadd(day,21,P.ERFASSDAT) or F.AUFTRAGLETZT > dateadd(day,21,F.AUFNDAT))) then convert(char(11),dateadd(day,21,F.AUFTRAGLETZT),104)+convert(char(8),dateadd(day,21,F.AUFTRAGLETZT),108)+' '
                        when (F.AUFNDAT is not null and F.AUFNDAT < getdate()) then convert(char(11),dateadd(day,21,F.AUFNDAT),104)+convert(char(8),dateadd(day,21,F.AUFNDAT),108)+' '
                   end,
    Aktivbis_alt="("+convert(char(11),P.AKTIVBIS,104)+convert(char(8),P.AKTIVBIS,108)+' '+")",
    ErfassPers=PE.PERSONID,
    letzter_Auftrag=convert(char(11),F.AUFTRAGLETZT,104)+convert(char(8),F.AUFTRAGLETZT,108)+' '
  
  from PATILISTE P, PATIFALL F, PERSON PE, EINSENDER E
  where
        F.PATIFALLX=P.PATIFALLX
    and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
    and F.ENTLDATVERW is NULL
    and (F.AUFTRAGLETZT is NULL or (F.AUFTRAGLETZT is not NULL and dateadd(day,21,F.AUFTRAGLETZT) <  getdate()))
    and F.AUFNDAT < getdate()
    and P.AKTIVBIS is null
    and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
    and P.EINSENDERX in (select EINSENDERX from #t_EINSAM)
    and E.EINSENDERX=P.EINSENDERX 
    and PE.PERSONX=P.ERFASSPERS
end
if @UPDATE = 1 
begin
 update PATILISTE set AKTIVBIS = case when (F.AUFNDAT is not null and F.AUFNDAT < getdate() and F.AUFTRAGLETZT < dateadd(day,21,F.AUFNDAT) ) then dateadd(day,21,F.AUFNDAT)
                                      when (F.AUFTRAGLETZT is not null and (F.AUFTRAGLETZT > dateadd(day,21,P.ERFASSDAT) or F.AUFTRAGLETZT > dateadd(day,21,F.AUFNDAT))) then dateadd(day,21,F.AUFTRAGLETZT)
                                      when (F.AUFNDAT is not null and F.AUFNDAT < getdate()) then dateadd(day,21,F.AUFNDAT)
                                 end
 from PATILISTE P, PATIFALL F
 where F.PATIFALLX=P.PATIFALLX
   and P.IDENTX is null      -- Hier steht FACHEINSENDERX, wenn es ein stationsübergreifender Eintrag ist.
   and F.ENTLDATVERW is NULL
   and (F.AUFTRAGLETZT is NULL or (F.AUFTRAGLETZT is not NULL and dateadd(day,21,F.AUFTRAGLETZT) <  getdate()))
   and F.AUFNDAT < getdate()
   and P.AKTIVBIS is null
   and P.EINSENDERX not in (select EINSENDERX from #temp_pl_manuell)
   and P.EINSENDERX in (select EINSENDERX from #t_EINSAM) 
end


/* -----------------------------------------------------------------------------------------------------------------------------------*/


go